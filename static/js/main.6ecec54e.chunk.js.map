{"version":3,"sources":["components/utils.ts","components/Calendar/CalendarCell/Modal.tsx","components/Calendar/CalendarCell/CalendarCell.tsx","components/Calendar/api/tasks.ts","components/Calendar/Week/Week.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dateNames","months","DAY_MILLISECONDS","getWeekByDate","day","monday","Date","getDay","week","i","push","getFormatDay","date","getDate","getMonth","moment","locale","Modal","isOpen","task","onSave","onClose","useState","values","setValues","useEffect","handleSubmitForm","newTaskModel","id","urgent","name","description","status","utils","MomentUtils","Dialog","open","DialogTitle","DialogContent","DialogContentText","toLocaleDateString","onSubmit","disableToolbar","lang","variant","format","margin","label","value","onChange","valueOf","FormControlLabel","control","Checkbox","checked","event","target","color","TextField","type","console","log","fullWidth","DialogActions","Button","onClick","CalendarCell","dayTasks","onDelete","isEditModalOpen","setIsEditModalOpen","editableTask","setEditableTask","openEditableModal","className","map","handleChangeStatus","taskId","TASKS_LOCAL_KEY","getTasks","tasksString","localStorage","getItem","JSON","parse","addTask","newTask","now","tasks","newTasks","stringify","setItem","editTask","filter","t","useStyles","makeStyles","theme","createStyles","spacing","extendedIcon","marginRight","currentDay","setHours","dayInWeek","index","getTasksByDay","Week","classes","setDayTasks","currentWeek","setCurrentWeek","getTasksFromStore","tasksFromStore","sort","a","b","handleSave","handleDeleteTask","deleteTask","size","root","flexGrow","menuButton","title","App","AppBar","position","Toolbar","IconButton","edge","Typography","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ecec54e.chunk.js","sourcesContent":["export let currentId: number = 1;\n\nexport const getNewId = (): number => {\n  return currentId++;\n}\n\nexport const dateNames: string[] = [\n    'Воскресенье',\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n];\n\nexport const months: string[] = [\n  'Января',\n  'Февраля',\n  'Марта',\n  'Апреля',\n  'Мая',\n  'Июня',\n  'Июля',\n  'Августа',\n  'Сентября',\n  'Октября',\n  'Ноября',\n  'Декабря'\n];\n\nexport const getDayName = (index: number): string => {\n    return dateNames[index];\n}\n\nexport const DAY_MILLISECONDS = 24 * 60 * 60 * 1000;\n\nexport const getWeekByDate = (day:number): number[] => {\n  const dayOfWeek = (new Date(day).getDay()) || 7;\n  const monday = day - (dayOfWeek - 1) * DAY_MILLISECONDS;\n  const week = [];\n  for(let i=0;i<7;i++){\n    week.push(monday + (DAY_MILLISECONDS * i))\n  }\n  return week;\n}\n\nexport const getFormatDay = (day: number ): string => {\n  const date = new Date(day);\n  return `${date.getDate()}  ${months[date.getMonth()]}`\n}\n\n\n","import React, { FC, MouseEventHandler, useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { MayBe, TTask } from \"../types\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport \"moment/locale/ru\";\n\ntype Props = {\n  isOpen: boolean;\n  task: MayBe<Partial<TTask>>;\n  onSave: (task: TTask) => void;\n  onClose: () => void;\n};\nmoment.locale(\"ru\");\n\nexport const Modal: FC<Props> = ({ isOpen, task, onSave, onClose }) => {\n  const [values, setValues] = useState<Partial<TTask>>();\n\n  useEffect(() => {\n    setValues(task ?? {});\n  }, [task]);\n\n  const handleChangeDate = (date: MaterialUiPickersDate | null): void => {\n    setValues({\n      ...values,\n      date: date?.valueOf() ?? null,\n    });\n  };\n\n  const handleChangeUrgent = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setValues({\n      ...values,\n      urgent: event.target.checked,\n    });\n  };\n\n  const handleChangeName = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    console.log(event.target.value);\n    setValues({\n      ...values,\n      name: event.target.value,\n    });\n  };\n\n  const handleChangeDescription = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    console.log(event.target.value);\n    setValues({\n      ...values,\n      description: event.target.value,\n    });\n  };\n\n  const handleSubmitForm = () => {\n    if (values) {\n      const newTaskModel: TTask = {\n        id: values.id ,\n        date: values.date ?? null,\n        urgent: values.urgent ?? false,\n        name: values.name ?? null,\n        description: values.description ?? null,\n        status: values.status ?? null,\n      };\n      onSave(newTaskModel);\n      onClose()\n    }\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils} locale=\"ru\">\n      <div>\n        <Dialog\n          open={isOpen}\n          onClose={onClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {values?.id ? \"Редактирование задачи\" : \"Новая задача\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {(new Date(values?.date ? values?.date : 0)).toLocaleDateString()}\n            </DialogContentText>\n\n            <form name=\"taskForm\" onSubmit={handleSubmitForm}>\n              <>\n                <KeyboardDatePicker\n                  disableToolbar\n                  lang={\"ru\"}\n                  variant=\"inline\"\n                  format=\"DD.MM.yyyy\"\n                  margin=\"normal\"\n                  id=\"date\"\n                  label=\"Дата\"\n                  value={values?.date}\n                  onChange={handleChangeDate}\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={!values?.urgent ? false : true}\n                      onChange={handleChangeUrgent}\n                      name=\"urgent\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Важно\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Название\"\n                  type=\"text\"\n                  value={values?.name}\n                  onChange={handleChangeName}\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"description\"\n                  label=\"Описание\"\n                  type=\"text\"\n                  value={values?.description}\n                  onChange={handleChangeDescription}\n                  fullWidth\n                />\n              </>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClose} color=\"primary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitForm} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n};\n","import React, { FC, MouseEventHandler, useState } from \"react\";\nimport { MayBe, TTask } from \"../types\";\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport \"moment/locale/fr\";\nimport \"moment/locale/ru\";\nimport { Modal } from \"./Modal\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\ntype Props = {\n  day: number;\n  dayTasks: TTask[];\n  onSave: (task: TTask) => void;\n  onDelete: (taskId: number) => void;\n};\n\nexport const CalendarCell: FC<Props> = ({ day, dayTasks, onSave, onDelete }) => {\n  const [isEditModalOpen, setIsEditModalOpen] = useState<boolean>(false);\n  const [editableTask, setEditableTask] = useState<MayBe<Partial<TTask>>>(null);\n\n  const openEditableModal = (task: MayBe<TTask>) => {\n    setEditableTask(\n      task ?? {\n        date: day,\n      }\n    );\n    setIsEditModalOpen(true);\n  };\n\n  const onClose = () => {\n    setEditableTask(null);\n    setIsEditModalOpen(false);\n  }\n\n  const handleChangeStatus = (task: TTask) => {\n    console.log(task);\n    onSave({...task, status: !task.status ? true :  !task.status})\n  }\n\n  const handleDeleteTask = (taskId: number) => {\n    console.log(taskId);\n    onDelete(taskId)\n  }\n\n  return (\n    <>\n      <Modal isOpen={isEditModalOpen} task={editableTask} onSave={onSave} onClose={onClose}/>\n      <div className=\"tasks\">\n        <button className=\"task add\" onClick={() => openEditableModal(null)}>\n          + Добавить новую задачу{\" \"}\n        </button>\n        {dayTasks.map((task) => (\n          <div key={task.id} className=\"task\">\n              <Checkbox\n                checked={!task.status ? false : true}\n                name=\"urgent\"\n                color=\"primary\"\n                className=\"task-status\"\n                onChange={() => handleChangeStatus(task)}\n              />\n            <button onClick={() => openEditableModal(task)} className=\"task-value\">\n                <div>\n                  {task.urgent ? <span className=\"warning\">! </span> : null}\n                  {task.name }\n                </div>\n                <div>{task.description}</div>\n                <div>{ (!task.description && !task.name) ? <span className=\"noname\"> Задача не описана</span>: null}</div>\n            </button>\n            <button className=\"delete\" onClick={() => handleDeleteTask(task.id || 0)}><DeleteOutlinedIcon /></button>\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n","import {TTask} from \"../types\";\n\nconst TASKS_LOCAL_KEY = \"TASKS\";\n\nexport const getTasks = (): TTask[] => {\n  const tasksString = localStorage.getItem(TASKS_LOCAL_KEY);\n  return tasksString ? (JSON.parse(tasksString) as TTask[]) : [];\n};\n\nexport const addTask = (task: TTask): boolean => {\n  const newTask = {\n    ...task,\n    id: Date.now(),\n  };\n  const tasks = getTasks();\n  const newTasks = [...tasks, newTask];\n  const tasksString = JSON.stringify(newTasks);\n  localStorage.setItem(TASKS_LOCAL_KEY, tasksString);\n  return true;\n};\n\nexport const editTask = (task: TTask): boolean => {\n  const tasks = getTasks();\n  const newTasks = [...tasks.filter(t => t.id !== task.id), task]\n  const tasksString = JSON.stringify(newTasks);\n  localStorage.setItem(TASKS_LOCAL_KEY, tasksString);\n  return true;\n};\n\nexport const deleteTask = (taskId: number): boolean => {\n  const tasks = getTasks();\n  const newTasks = [...tasks.filter(t => t.id !== taskId)]\n  console.log(newTasks)\n  const tasksString = JSON.stringify(newTasks);\n  localStorage.setItem(TASKS_LOCAL_KEY, tasksString);\n  return true;\n}\n","import React, { FC, MouseEventHandler, useEffect, useState } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport {MayBe, TTask} from \"../types\";\nimport {\n  getDayName,\n  getWeekByDate,\n  getFormatDay,\n  DAY_MILLISECONDS,\n} from \"../../utils\";\nimport \"../styles.css\";\nimport { CalendarCell } from \"../CalendarCell/CalendarCell\";\nimport {addTask, deleteTask, editTask, getTasks} from \"../api/tasks\";\n\ntype Props = {\n  dayTask: TTask;\n  onSave: (dayTasks: TTask) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nconst currentDay = new Date().setHours(0, 0, 0, 0);\n\nconst dayInWeek = (day: number): string => {\n  return getDayName(new Date(day).getDay());\n};\n\nconst getTasksByDay = (tasks: TTask[], day: number): TTask[] => {\n  return tasks.filter(\n    (task) =>\n      task.date && task.date >= day && task.date < day + DAY_MILLISECONDS\n  );\n};\n\nexport const Week: FC = ({}) => {\n  const classes = useStyles();\n  const [tasks, setDayTasks] = useState<TTask[]>([]);\n  const [currentWeek, setCurrentWeek] = useState<number[]>(\n    getWeekByDate(currentDay)\n  );\n\n  console.log(tasks);\n  const getTasksFromStore = () => {\n    const tasksFromStore = getTasks();\n    setDayTasks(tasksFromStore.sort((a, b) => ((a.id ?? 0) - (b.id ?? 0))));\n  };\n\n  useEffect(() => {\n    getTasksFromStore();\n  }, []);\n\n\n  const handleSave = (task: TTask): void => {\n    console.log(task, \"handleSave\");\n    const saveFunction = !task.id ? addTask : editTask;\n    if (saveFunction(task)) {\n      getTasksFromStore();\n    }\n  };\n\n  const getLastWeek = () => {\n    setCurrentWeek(getWeekByDate(currentWeek[0] - DAY_MILLISECONDS * 7));\n  };\n\n  const getNextWeek = () => {\n    setCurrentWeek(getWeekByDate(currentWeek[0] + DAY_MILLISECONDS * 7));\n  };\n\n  const handleDeleteTask = (taskId: number): void => {\n    if (deleteTask(taskId)) {\n      getTasksFromStore();\n    }\n  }\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <h1 className=\"week-block\">\n          <Button size=\"small\" className={classes.margin} onClick={getLastWeek}>\n            last\n          </Button>\n          <span className=\"week-name\">\n            {`${getFormatDay(currentWeek[0])} - ${getFormatDay(\n              currentWeek[6]\n            )}`}\n          </span>\n          <Button size=\"small\" className={classes.margin} onClick={getNextWeek}>\n            next\n          </Button>\n        </h1>\n        <div className=\"week\">\n          {currentWeek.map((day) => (\n            <div className=\"day\">\n              <h4>{getFormatDay(day)}</h4>\n              <h4>{dayInWeek(day)}</h4>\n              <CalendarCell\n                day={day}\n                dayTasks={getTasksByDay(tasks, day)}\n                onSave={handleSave}\n                onDelete={handleDeleteTask}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n//import { Calendar } from \"./components/Calendar/Calendar\";\nimport \"./App.css\";\nimport { Week } from \"./components/Calendar/Week/Week\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nfunction App() {\n  const classes = useStyles();\n\n  /*const scrollableWrapper = useRef<HTMLDivElement>(null);\n\n  const handleScroll = () => {\n    if (scrollableWrapper.current) {\n      scrollableWrapper.current.scrollTo({ left: scrollableWrapper.current.scrollWidth, behavior: 'smooth' });\n    }\n  };*/\n\n  return (\n    <div className=\"App\">\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Мой планер\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <Week />\n\n      {/*<div\n        ref={scrollableWrapper}\n        style={{ width: \"500px\", overflow: \"hidden\", height: \"100px\" }}\n      >\n        <div\n          style={{ width: \"1000px\", height: \"100%\", border: \"10px solid red\" }}\n        >1222222</div>\n      </div>\n      <button onClick={handleScroll}>scroll</button>*/}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}