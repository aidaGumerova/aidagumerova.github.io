{"version":3,"sources":["components/utils.ts","components/Calendar/CalendarCell/Modal.tsx","components/Calendar/CalendarCell/CalendarCell.tsx","components/Calendar/api/tasks.ts","components/Calendar/Week/useTaskHandlers.ts","components/Calendar/Week/Week.tsx","components/Calendar/Week/useWeekContainer.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dateNames","months","DAY_MILLISECONDS","getWeekByDate","day","monday","Date","getDay","week","i","push","getFormatDay","date","getDate","getMonth","moment","locale","Modal","isOpen","task","onSave","onClose","useState","values","setValues","useEffect","handleSubmitForm","newTaskModel","id","urgent","name","description","status","utils","MomentUtils","Dialog","open","DialogTitle","DialogContent","DialogContentText","toLocaleDateString","onSubmit","disableToolbar","lang","variant","format","margin","label","value","onChange","valueOf","FormControlLabel","control","Checkbox","checked","event","target","color","TextField","type","console","log","fullWidth","DialogActions","Button","onClick","useStyles","makeStyles","theme","createStyles","button","spacing","CalendarCell","dayTasks","onDelete","classes","isEditModalOpen","setIsEditModalOpen","editableTask","setEditableTask","openEditableModal","className","startIcon","map","handleChangeStatus","taskId","TASKS_LOCAL_KEY","getTasks","tasksString","localStorage","getItem","JSON","parse","addTask","newTask","now","tasks","newTasks","stringify","setItem","editTask","filter","t","useTaskHandlers","getTasksFromStore","handleSave","handleDeleteTask","deleteTask","extendedIcon","marginRight","TODAY","setHours","dayInWeek","index","getTasksByDay","Week","setDayTasks","currentDay","setCurrentDay","currentWeek","nextWeek","previousWeek","tasksFromStore","sort","a","b","scrollableWrapperRef","useRef","current","scrollTo","left","offsetWidth","handleClickPreviousWeek","behavior","setTimeout","handleClickNextWeek","scrollWidth","useWeekContainer","IconButton","fontSize","ref","root","flexGrow","menuButton","title","App","AppBar","position","Toolbar","Typography","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e010d4a5.chunk.js","sourcesContent":["export let currentId: number = 1;\n\nexport const getNewId = (): number => {\n  return currentId++;\n};\n\nexport const dateNames: string[] = [\n  \"Воскресенье\",\n  \"Понедельник\",\n  \"Вторник\",\n  \"Среда\",\n  \"Четверг\",\n  \"Пятница\",\n  \"Суббота\",\n];\n\nexport const months: string[] = [\n  \"Января\",\n  \"Февраля\",\n  \"Марта\",\n  \"Апреля\",\n  \"Мая\",\n  \"Июня\",\n  \"Июля\",\n  \"Августа\",\n  \"Сентября\",\n  \"Октября\",\n  \"Ноября\",\n  \"Декабря\",\n];\n\nexport const getDayName = (index: number): string => {\n  return dateNames[index];\n};\n\nexport const DAY_MILLISECONDS = 24 * 60 * 60 * 1000;\n\nexport const getWeekByDate = (day: number): number[] => {\n  const dayOfWeek = new Date(day).getDay() || 7;\n  const monday = day - (dayOfWeek - 1) * DAY_MILLISECONDS;\n  const week = [];\n  for (let i = 0; i < 7; i++) {\n    week.push(monday + DAY_MILLISECONDS * i);\n  }\n  return week;\n};\n\nexport const getFormatDay = (day: number): string => {\n  const date = new Date(day);\n  return `${date.getDate()}  ${months[date.getMonth()]}`;\n};\n","import React, { FC, MouseEventHandler, useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport moment from \"moment\";\nimport MomentUtils from \"@date-io/moment\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { MayBe, TTask } from \"../types\";\nimport { MaterialUiPickersDate } from \"@material-ui/pickers/typings/date\";\nimport \"moment/locale/ru\";\n\ntype Props = {\n  isOpen: boolean;\n  task: MayBe<Partial<TTask>>;\n  onSave: (task: TTask) => void;\n  onClose: () => void;\n};\nmoment.locale(\"ru\");\n\nexport const Modal: FC<Props> = ({ isOpen, task, onSave, onClose }) => {\n  const [values, setValues] = useState<Partial<TTask>>();\n\n  useEffect(() => {\n    setValues(task ?? {});\n  }, [task]);\n\n  const handleChangeDate = (date: MaterialUiPickersDate | null): void => {\n    setValues({\n      ...values,\n      date: date?.valueOf() ?? null,\n    });\n  };\n\n  const handleChangeUrgent = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setValues({\n      ...values,\n      urgent: event.target.checked,\n    });\n  };\n\n  const handleChangeName = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    console.log(event.target.value);\n    setValues({\n      ...values,\n      name: event.target.value,\n    });\n  };\n\n  const handleChangeDescription = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    console.log(event.target.value);\n    setValues({\n      ...values,\n      description: event.target.value,\n    });\n  };\n\n  const handleSubmitForm = () => {\n    if (values) {\n      const newTaskModel: TTask = {\n        id: values.id,\n        date: values.date ?? null,\n        urgent: values.urgent ?? false,\n        name: values.name ?? null,\n        description: values.description ?? null,\n        status: values.status ?? null,\n      };\n      onSave(newTaskModel);\n      onClose();\n    }\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={MomentUtils} locale=\"ru\">\n      <div>\n        <Dialog\n          open={isOpen}\n          onClose={onClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {values?.id ? \"Редактирование задачи\" : \"Новая задача\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {new Date(values?.date ? values?.date : 0).toLocaleDateString()}\n            </DialogContentText>\n\n            <form name=\"taskForm\" onSubmit={handleSubmitForm}>\n              <>\n                <KeyboardDatePicker\n                  disableToolbar\n                  lang={\"ru\"}\n                  variant=\"inline\"\n                  format=\"DD.MM.yyyy\"\n                  margin=\"normal\"\n                  id=\"date\"\n                  label=\"Дата\"\n                  value={values?.date}\n                  onChange={handleChangeDate}\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={!!values?.urgent}\n                      onChange={handleChangeUrgent}\n                      name=\"urgent\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Важно\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"name\"\n                  label=\"Название\"\n                  type=\"text\"\n                  value={values?.name}\n                  onChange={handleChangeName}\n                  fullWidth\n                />\n                <TextField\n                  margin=\"dense\"\n                  id=\"description\"\n                  label=\"Описание\"\n                  type=\"text\"\n                  value={values?.description}\n                  onChange={handleChangeDescription}\n                  fullWidth\n                />\n              </>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClose} color=\"primary\">\n              Отмена\n            </Button>\n            <Button onClick={handleSubmitForm} color=\"primary\">\n              Сохранить\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n};\n","import React, { FC, MouseEventHandler, useState } from \"react\";\nimport { MayBe, TTask } from \"../types\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport DeleteOutlinedIcon from \"@material-ui/icons/DeleteOutlined\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorOutlineOutlinedIcon from '@material-ui/icons/ErrorOutlineOutlined';\nimport \"moment/locale/fr\";\nimport \"moment/locale/ru\";\nimport { Modal } from \"./Modal\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\ntype Props = {\n  day: number;\n  dayTasks: TTask[];\n  onSave: (task: TTask) => void;\n  onDelete: (taskId: number) => void;\n};\n\nexport const CalendarCell: FC<Props> = ({\n  day,\n  dayTasks,\n  onSave,\n  onDelete,\n}) => {\n  const classes = useStyles();\n  const [isEditModalOpen, setIsEditModalOpen] = useState<boolean>(false);\n  const [editableTask, setEditableTask] = useState<MayBe<Partial<TTask>>>(null);\n\n  const openEditableModal = (task: MayBe<TTask>) => {\n    setEditableTask(\n      task ?? {\n        date: day,\n      }\n    );\n    setIsEditModalOpen(true);\n  };\n\n  const onClose = () => {\n    setEditableTask(null);\n    setIsEditModalOpen(false);\n  };\n\n  const handleChangeStatus = (task: TTask) => {\n    console.log(task);\n    onSave({ ...task, status: !task.status ? true : !task.status });\n  };\n\n  const handleDeleteTask = (taskId: number) => {\n    console.log(taskId);\n    onDelete(taskId);\n  };\n\n  return (\n    <>\n      <Modal\n        isOpen={isEditModalOpen}\n        task={editableTask}\n        onSave={onSave}\n        onClose={onClose}\n      />\n      <div className=\"tasks\">\n        <Button\n          variant=\"outlined\"\n          className = {classes.button}\n          startIcon={<AddIcon />}\n          color=\"primary\"\n          onClick={() => openEditableModal(null)}>Добавить\n        </Button>\n        {dayTasks.map((task) => (\n          <div key={task.id} className=\"task\">\n            <Checkbox\n              checked={!task.status ? false : true}\n              name=\"urgent\"\n              color=\"primary\"\n              className=\"task-status\"\n              onChange={() => handleChangeStatus(task)}\n            />\n            <button\n              onClick={() => openEditableModal(task)}\n              className=\"task-value\"\n            >\n              <div>\n                {task.urgent ? <span className=\"warning\"><ErrorOutlineOutlinedIcon/></span> : null}\n                {task.name}\n              </div>\n              <div>{task.description}</div>\n              <div>\n                {!task.description && !task.name ? (\n                  <span className=\"noname\"> Задача не описана</span>\n                ) : null}\n              </div>\n            </button>\n            <button\n              className=\"delete\"\n              onClick={() => handleDeleteTask(task.id || 0)}\n            >\n              <DeleteOutlinedIcon />\n            </button>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { TTask } from \"../types\";\n\nconst TASKS_LOCAL_KEY = \"TASKS\";\n\nexport const getTasks = (): TTask[] => {\n  const tasksString = localStorage.getItem(TASKS_LOCAL_KEY);\n  return tasksString ? (JSON.parse(tasksString) as TTask[]) : [];\n};\n\nexport const addTask = (task: TTask): boolean => {\n  const newTask = {\n    ...task,\n    id: Date.now(),\n  };\n  const tasks = getTasks();\n  const newTasks = [...tasks, newTask];\n  const tasksString = JSON.stringify(newTasks);\n  localStorage.setItem(TASKS_LOCAL_KEY, tasksString);\n  return true;\n};\n\nexport const editTask = (task: TTask): boolean => {\n  const tasks = getTasks();\n  const newTasks = [...tasks.filter((t) => t.id !== task.id), task];\n  const tasksString = JSON.stringify(newTasks);\n  localStorage.setItem(TASKS_LOCAL_KEY, tasksString);\n  return true;\n};\n\nexport const deleteTask = (taskId: number): boolean => {\n  const tasks = getTasks();\n  const newTasks = [...tasks.filter((t) => t.id !== taskId)];\n  console.log(newTasks);\n  const tasksString = JSON.stringify(newTasks);\n  localStorage.setItem(TASKS_LOCAL_KEY, tasksString);\n  return true;\n};\n","import { TTask } from \"../types\";\nimport {addTask, deleteTask, editTask} from \"../api/tasks\";\n\ntype TParams = {\n  getTasksFromStore: () => void;\n};\n\ntype TResult = {\n  handleSave: (task: TTask) => void;\n  handleDeleteTask: (taskId: number) => void;\n};\n\nexport const useTaskHandlers = ({getTasksFromStore,}: TParams): TResult => {\n\n  const handleSave = (task: TTask): void => {\n    const saveFunction = !task.id ? addTask : editTask;\n    if (saveFunction(task)) {\n      getTasksFromStore();\n    }\n  };\n\n  const handleDeleteTask = (taskId: number): void => {\n    if (deleteTask(taskId)) {\n      getTasksFromStore();\n    }\n  };\n\n  return {\n    handleSave,\n    handleDeleteTask,\n  };\n};\n","import React, { FC, useRef, useEffect, useState } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { TTask } from \"../types\";\nimport {\n  getDayName,\n  getWeekByDate,\n  getFormatDay,\n  DAY_MILLISECONDS,\n} from \"../../utils\";\nimport \"../styles.css\";\nimport { CalendarCell } from \"../CalendarCell/CalendarCell\";\nimport { getTasks } from \"../api/tasks\";\nimport { useWeekContainer } from \"./useWeekContainer\";\nimport {useTaskHandlers} from \"./useTaskHandlers\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nconst TODAY = new Date().setHours(0, 0, 0, 0);\n\nconst dayInWeek = (day: number): string => {\n  return getDayName(new Date(day).getDay());\n};\n\nconst getTasksByDay = (tasks: TTask[], day: number): TTask[] => {\n  return tasks.filter(\n    (task) =>\n      task.date && task.date >= day && task.date < day + DAY_MILLISECONDS\n  );\n};\n\nexport const Week: FC = ({}) => {\n  const classes = useStyles();\n  const [tasks, setDayTasks] = useState<TTask[]>([]);\n  const [currentDay, setCurrentDay] = useState<number>(TODAY);\n\n  const currentWeek = getWeekByDate(currentDay);\n  const nextWeek = getWeekByDate(currentDay + DAY_MILLISECONDS * 7);\n  const previousWeek = getWeekByDate(currentDay - DAY_MILLISECONDS * 7);\n\n  const getTasksFromStore = () => {\n    const tasksFromStore = getTasks();\n    setDayTasks(tasksFromStore.sort((a, b) => (a.id ?? 0) - (b.id ?? 0)));\n  };\n\n  useEffect(() => {\n    getTasksFromStore();\n  }, []);\n\n  const { handleSave, handleDeleteTask } = useTaskHandlers({\n    getTasksFromStore,\n  })\n\n  const { scrollableWrapperRef, handleClickPreviousWeek, handleClickNextWeek } =\n    useWeekContainer({\n      currentDay,\n      setCurrentDay,\n      tasks,\n    });\n\n  return (\n    <div className=\"wrapper\">\n      <h1 className=\"week-block\">\n        <IconButton aria-label=\"delete\" className={classes.margin} onClick={handleClickPreviousWeek}>\n          <ArrowBackIcon fontSize=\"large\"/>\n        </IconButton>\n        <span className=\"week-name\">\n          {`${getFormatDay(currentWeek[0])} - ${getFormatDay(currentWeek[6])}`}\n        </span>\n        <IconButton aria-label=\"delete\" className={classes.margin} onClick={handleClickNextWeek}>\n          <ArrowForwardIcon fontSize=\"large\"/>\n        </IconButton>\n      </h1>\n      <div className=\"weeks\" ref={scrollableWrapperRef}>\n        <div className=\"week\">\n          {previousWeek.map((day) => (\n            <div className=\"day\">\n              <div className=\"content-day-wrapper\">\n                <div className=\"day-headline\">\n                  <h4>{getFormatDay(day)}</h4>\n                  <h6>{dayInWeek(day)}</h6>\n                </div>\n                <CalendarCell\n                  day={day}\n                  dayTasks={getTasksByDay(tasks, day)}\n                  onSave={handleSave}\n                  onDelete={handleDeleteTask}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"week\">\n          {currentWeek.map((day) => (\n            <div className=\"day\">\n              <div className=\"content-day-wrapper\">\n                <div className=\"day-headline\">\n                  <h4>{getFormatDay(day)}</h4>\n                  <h6>{dayInWeek(day)}</h6>\n                </div>\n                <CalendarCell\n                  day={day}\n                  dayTasks={getTasksByDay(tasks, day)}\n                  onSave={handleSave}\n                  onDelete={handleDeleteTask}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"week\">\n          {nextWeek.map((day) => (\n            <div className=\"day\">\n              <div className=\"content-day-wrapper\">\n                <div className=\"day-headline\">\n                  <h4>{getFormatDay(day)}</h4>\n                  <h6>{dayInWeek(day)}</h6>\n                </div>\n                <CalendarCell\n                  day={day}\n                  dayTasks={getTasksByDay(tasks, day)}\n                  onSave={handleSave}\n                  onDelete={handleDeleteTask}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { DAY_MILLISECONDS } from \"../../utils\";\nimport { RefObject, useEffect, useRef } from \"react\";\nimport { TTask } from \"../types\";\n\nconst SCROLL_DELAY = 1000;\n\ntype TParams = {\n  currentDay: number;\n  setCurrentDay: (currentDay: number) => void;\n  tasks: TTask[];\n};\n\ntype TResult = {\n  scrollableWrapperRef: RefObject<HTMLDivElement>;\n  handleClickPreviousWeek: () => void;\n  handleClickNextWeek: () => void;\n};\n\nexport const useWeekContainer = ({\n  currentDay,\n  setCurrentDay,\n  tasks,\n}: TParams): TResult => {\n  const scrollableWrapperRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollableWrapperRef.current) {\n      scrollableWrapperRef.current.scrollTo({\n        left: scrollableWrapperRef.current.offsetWidth,\n      });\n    }\n  }, [currentDay, tasks]);\n\n  const handleClickPreviousWeek = () => {\n    if (scrollableWrapperRef.current) {\n      scrollableWrapperRef.current.scrollTo({\n        left: 0,\n        behavior: \"smooth\",\n      });\n      setTimeout(() => {\n        setCurrentDay(currentDay - DAY_MILLISECONDS * 7);\n      }, SCROLL_DELAY);\n    }\n  };\n\n  const handleClickNextWeek = () => {\n    if (scrollableWrapperRef.current) {\n      scrollableWrapperRef.current.scrollTo({\n        left: scrollableWrapperRef.current.scrollWidth,\n        behavior: \"smooth\",\n      });\n      setTimeout(() => {\n        setCurrentDay(currentDay + DAY_MILLISECONDS * 7);\n      }, SCROLL_DELAY);\n    }\n  };\n\n  return {\n    scrollableWrapperRef,\n    handleClickPreviousWeek,\n    handleClickNextWeek,\n  };\n};\n","import React, { useRef } from \"react\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n//import { Calendar } from \"./components/Calendar/Calendar\";\r\nimport \"./App.css\";\r\nimport { Week } from \"./components/Calendar/Week/Week\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Мой планер\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <Week />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fontsource/roboto\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}